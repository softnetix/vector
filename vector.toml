data_dir = "/var/lib/vector"

[sources.validator_access_logs]
type = "file"
include = ["/usr/local/openresty/nginx/logs/protection-validator-vector.access.log"]
ignore_older = 86400  # 1 day

[sources.validator_stress_access_logs]
type = "file"
include = ["/usr/local/openresty/nginx/logs/protection-validator-vector-stress.access.log"]
ignore_older = 86400  # 1 day

[enrichment_tables.enrich_geoip_city]
type = "geoip"
path = "/usr/share/GeoIP/GeoLite2-City.mmdb"

[enrichment_tables.enrich_geoip_asn]
type = "geoip"
path = "/usr/share/GeoIP/GeoLite2-ASN.mmdb"

[transforms.parse_json]
inputs = ["validator_access_logs"]
type = "remap"
source = '''
if (is_json(to_string!(.message))) {
    . = parse_json!(.message, max_depth: 1)
    if is_nullish(.site_key) { .site_key = "00000000-0000-0000-0000-000000000000" }
    if is_nullish(.server_key) { .server_key = "00000000-0000-0000-0000-000000000000" }
    if is_nullish(.project_id) { .project_id = "00000000-0000-0000-0000-000000000000" }
    if is_nullish(.customer_id) { .customer_id = "00000000-0000-0000-0000-000000000000" }
    if is_nullish(.server_port) { .server_port = 0 }
    if !is_timestamp(.created_at) { .created_at = to_unix_timestamp(now(), unit: "milliseconds") }
    .remote_addr = ipv6_to_ipv4(.remote_addr) ?? .remote_addr

    country_info = get_enrichment_table_record("enrich_geoip_city", {"ip": .remote_addr}) ?? {}
    .country = country_info.country_code

    asn_info = get_enrichment_table_record("enrich_geoip_asn", {"ip": .remote_addr}) ?? {}
    .asn = asn_info.autonomous_system_organization
} else {
    .custom_field3 = to_string!(.message)
    .created_at = now()
}
'''

[transforms.parse_json_stress]
inputs = ["validator_stress_access_logs"]
type = "remap"
source = '''
. = parse_json!(.message, max_depth: 1)
.created_at = now()
if is_nullish(.site_key) { .site_key = "00000000-0000-0000-0000-000000000000" }
if is_nullish(.server_key) { .server_key = "00000000-0000-0000-0000-000000000000" }
if is_nullish(.project_id) { .project_id = "00000000-0000-0000-0000-000000000000" }
if is_nullish(.customer_id) { .customer_id = "00000000-0000-0000-0000-000000000000" }
if is_nullish(.server_port) { .server_port = 0 }
'''

[sinks.click_house]
type = "clickhouse"
inputs = ["parse_json"]
encoding.timestamp_format = "unix"
endpoint = "http://clickhouse:8123"
database = "protection"
table = "requests"
skip_unknown_fields = true
auth = { strategy = "basic", password = "${CLICKHOUSE_PASSWORD}", user = "${CLICKHOUSE_USER}" }

[sinks.click_house_stress]
type = "clickhouse"
inputs = ["parse_json_stress"]
encoding.timestamp_format = "unix"
endpoint = "http://clickhouse:8123"
database = "protection"
table = "stress_requests"
skip_unknown_fields = true
auth = { strategy = "basic", password = "${CLICKHOUSE_PASSWORD}", user = "${CLICKHOUSE_USER}" }

#[sinks.console]
#inputs = ["parse_json"]
#type = "console"
#encoding.codec = "json"
